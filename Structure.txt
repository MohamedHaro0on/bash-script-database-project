📁 BashDBMS/
│── 📁 databases/         # All databases (each database is a directory)
│── 📁 scripts/           # All shell scripts (modular approach)
│   │── 📁 db_management/ # Handles database operations
│   │   │── 📜 connect.sh
│   │   │── 📜 create.sh
│   │   │── 📜 db_management.sh
│   │   │── 📜 drop.sh
│   │   │── 📜 list.sh
│   │   │── 📜 rename.sh
│   │── 📁 table_management/ # Handles table operations
│   │   │── 📜 create.sh
│   │   │── 📜 delete.sh
│   │   │── 📜 drop.sh
│   │   │── 📜 insert.sh
│   │   │── 📜 list.sh
│   │   │── 📜 rename.sh
│   │   │── 📜 select.sh
│   │   │── 📜 table_management.sh
│   │   │── 📜 table_menu.sh
│   │   │── 📜 update.sh
│── 📁 configs/           # Configuration files
│   │── 📜 config.sh
│── 📁 utils/             # Utility scripts (if any)
│── 📜 main.sh            # Main script to run the DBMS menu
│── 📜 README.md          # Documentation and usage instructions
│── 📜 .gitignore         # Git ignore file
│── 📜 Structure.txt      # Project structure documentation-------------------------------------------------------------------------------


databases/
├── my_database/
    ├── data   # Table data (each table is a file)
    ├── metadata  # Table schema (columns, types, primary key)

Example metadata file:
------------------------
id:int:PK
name:string
age:int
---------------------------------------------------------------------
3️⃣ Scripts & Responsibilities
*****************************
main.sh	Displays ==>    the main menu and routes user input
db_manager.sh    ==>	Manages databases (create, list, connect, drop)
table_manager.sh ==>	Manages tables (create, list, drop)
insert.sh	     ==>    Validates and inserts new records into tables
select.sh	     ==>    Displays table data in a formatted way
update.sh        ==>	Modifies existing records based on conditions
delete.sh        ==>	Deletes records based on conditions